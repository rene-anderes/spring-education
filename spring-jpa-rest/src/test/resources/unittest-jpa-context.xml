<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
    xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
     
    <tx:annotation-driven />
    <context:annotation-config />
    <jpa:repositories base-package="org.anderes.edu.jpa.domain" />

    <!-- Die Test's werden mittels In-Memory Datenbank ausgefÃ¼hrt. -->

    <!-- JPA Entity Manager -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="org.anderes.edu.jpa.domain" />
        <property name="jpaDialect" ref="jpaDialect" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="javax.persistence.validation.mode">auto</prop>
                <prop key="javax.persistence.schema-generation.database.action">create</prop>
                <prop key="javax.persistence.schema-generation.create-database-schemas">true</prop>
                <prop key="javax.persistence.schema-generation.create-source">metadata</prop>
                <prop key="eclipselink.target-database">Derby</prop>
                <prop key="eclipselink.jdbc.native-sql">true</prop>
                <prop key="eclipselink.weaving">false</prop>
                <prop key="eclipselink.logging.level">FINE</prop>
                <!-- Note: Setting eclipselink.logging.level to FINE is not sufficient (as of EclipseLink 2.4.0 - Juno), you have to set eclipselink.logging.level.sql to FINE. -->
                <prop key="eclipselink.logging.level.sql">FINE</prop>
                <prop key="eclipselink.logging.parameters">true</prop>
                <prop key="eclipselink.logging.logger">JavaLogger</prop>
            </props>
        </property>
    </bean>

    <!-- Data Source: Derby Embedded -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
        <property name="url" value="jdbc:derby:memory:myDB;create=true" />
        <property name="username" value="APP" />
        <property name="password" value="APP" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect" />


    <bean name="databaseTester" class="org.dbunit.DataSourceDatabaseTester">
        <constructor-arg ref="dataSource"></constructor-arg>
    </bean>

    <bean name="rule" class="org.anderes.edu.dbunitburner.DbUnitRule">
        <constructor-arg ref="databaseTester"></constructor-arg>
    </bean>
    
    <bean name="customDataTypeFactory" class="org.anderes.edu.dbunitburner.CustomDataTypeFactory"></bean>
    
    <!-- Wenn '<prop key="eclipselink.weaving">' auf true ist -->
    <!-- siehe http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html -->
    <!-- <bean id="loadTimeWeaver" class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" /> -->

</beans>