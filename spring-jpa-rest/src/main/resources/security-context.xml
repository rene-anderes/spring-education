<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:security="http://www.springframework.org/schema/security"
 xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Security configuration for REST services. -->
    <!-- 'access' siehe Klasse SecurityExpressionRoot -->
    <security:http pattern="/users/**" create-session="stateless" authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/users/token" access="hasRole('ROLE_ADMIN')" />
        <security:http-basic />
        <security:csrf disabled="true"/>
    </security:http>

    <security:http pattern="/recipes/**" create-session="stateless" entry-point-ref="jwtAuthenticationEntryPoint">
        <security:intercept-url pattern="/recipes/**" method="POST" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/recipes/**" method="PUT" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/recipes/**" method="DELETE" access="hasRole('ROLE_ADMIN')" />
        <security:custom-filter before="BASIC_AUTH_FILTER" ref="jwtAuthenticationFilter"/>
        <security:csrf disabled="true"/>
    </security:http>     

    <!-- Authentication manager. -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:user-service id="userDetailsService">
                <security:user name="admin" password="password" authorities="ROLE_ADMIN, ROLE_USER" />
                <security:user name="user" password="password" authorities="ROLE_USER" />
            </security:user-service>
        </security:authentication-provider>
        <security:authentication-provider ref="jwtAuthenticationProvider" />
    </security:authentication-manager>

    <bean id="jwtAuthenticationFilter" class="org.anderes.edu.security.jwt.JwtAuthenticationTokenFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationSuccessHandler" ref="jwtAuthenticationSuccessHandler" /> 
    </bean>
    
    <bean id="jwtAuthenticationSuccessHandler" class="org.anderes.edu.security.jwt.JwtAuthenticationSuccessHandler" />

</beans>
