<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:util="http://www.springframework.org/schema/util" 
    xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:component-scan base-package="org.anderes.cookbook.web.rest, org.anderes.tech" />
    
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <!-- Pageable fÃ¼r die REST-Schnittstelle -->
            <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/vue.html" view-name="vue"/>
    
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="org.anderes.cookbook.web.converter.RecipeResourceToRecipeEntity"/>
                <bean class="org.anderes.cookbook.web.converter.RecipeEntityToRecipeResource"/>
                <bean class="org.anderes.cookbook.web.converter.IngredientEntityToIngredientResource"/>
                <bean class="org.anderes.cookbook.web.converter.IngredientResourceToIngredientEntity"/>
            </set>
        </property>
    </bean>

    <!-- using Spring HATEOAS -->
    <bean class="org.springframework.data.web.config.HateoasAwareSpringDataWebConfiguration" />

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter" />
            </list>
        </property>
    </bean>

    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- Spring-driven Method Validation -->
    <!-- siehe https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#validation-beanvalidation-spring-method -->
    <bean id="validatorPostProcessor" class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>
    
    <!-- Log4j JDK Logging Adapter - siehe https://logging.apache.org/log4j/2.0/log4j-jul/index.html -->
    <bean id="systemProps" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" value="#{@systemProperties}" />
        <property name="targetMethod" value="putAll" />
        <property name="arguments">
            <util:properties>
                <prop key="java.util.logging.manager">org.apache.logging.log4j.jul.LogManager</prop>
            </util:properties>
        </property>
    </bean>
       
</beans>
